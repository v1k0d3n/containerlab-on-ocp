apiVersion: clabernetes.containerlab.dev/v1alpha1
kind: Topology
metadata:
  name: {{TOPOLOGY_NAME}}
  namespace: {{NS_DEMO}}
  labels:
    app.kubernetes.io/name: {{TOPOLOGY_NAME}}
    app.kubernetes.io/instance: {{NS_DEMO}}
spec:
  definition:
    containerlab: |
      name: sonic-spine-leaf
      topology:
        nodes:
          # Spine switches (2x for redundancy) - using real SONiC
          spine1:
            kind: sonic-vs
            image: {{SONIC_FULL_IMAGE}}
            mgmt_ipv4: 10.0.1.1
          spine2:
            kind: sonic-vs
            image: {{SONIC_FULL_IMAGE}}
            mgmt_ipv4: 10.0.1.2
          
          # Leaf switches (2x for access layer) - using real SONiC
          leaf1:
            kind: sonic-vs
            image: {{SONIC_FULL_IMAGE}}
            mgmt_ipv4: 10.0.2.1
          leaf2:
            kind: sonic-vs
            image: {{SONIC_FULL_IMAGE}}
            mgmt_ipv4: 10.0.2.2
          
          # Linux hosts for testing
          host1:
            kind: linux
            image: alpine:latest
            cmd: sh -c "while true; do ip addr add 10.2.1.10/24 dev eth1 2>/dev/null || true; ip link set eth1 up; ip route add default via 10.2.1.1; sleep 30; done"
            mgmt_ipv4: 10.2.1.10
          host2:
            kind: linux
            image: alpine:latest
            cmd: sh -c "while true; do ip addr add 10.2.2.10/24 dev eth1 2>/dev/null || true; ip link set eth1 up; ip route add default via 10.2.2.1; sleep 30; done"
            mgmt_ipv4: 10.2.2.10
        
        links:
          # Spine-Leaf connections (full mesh)
          - endpoints: ["spine1:eth1", "leaf1:eth1"]    # Spine1 -> Leaf1
          - endpoints: ["spine1:eth2", "leaf2:eth1"]    # Spine1 -> Leaf2
          - endpoints: ["spine2:eth1", "leaf1:eth2"]    # Spine2 -> Leaf1
          - endpoints: ["spine2:eth2", "leaf2:eth2"]    # Spine2 -> Leaf2
          
          # Host connections to leaf switches
          - endpoints: ["leaf1:eth3", "host1:eth1"]     # Leaf1 -> Host1
          - endpoints: ["leaf2:eth3", "host2:eth1"]     # Leaf2 -> Host2
